{
  "_from": "match-all",
  "_id": "match-all@1.2.4",
  "_inBundle": false,
  "_integrity": "sha512-V/fHK8ld4mxVLn7vOlyp8wH6EqVD4+wLUrdtbuFNzttgpZ/JAjaSVLqVd66dlKCdGcN1zEyEkERTremiaTve9g==",
  "_location": "/match-all",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "match-all",
    "fetchSpec": "latest",
    "name": "match-all",
    "raw": "match-all",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/match-all/-/match-all-1.2.4.tgz",
  "_shasum": "1add1d66835fa82158cf62e7854635c3dfb923f0",
  "_spec": "match-all",
  "_where": "E:\\Web\\Prudent\\prudent-apiserver",
  "author": {
    "email": "bizauionica@gmail.com",
    "name": "Ionică Bizău",
    "url": "https://ionicabizau.net"
  },
  "bugs": {
    "url": "https://github.com/IonicaBizau/match-all/issues"
  },
  "bundleDependencies": false,
  "contributors": [
    {
      "name": "Johny Jugianto",
      "email": "johnyj@amproker.com"
    }
  ],
  "dependencies": {},
  "deprecated": false,
  "description": "Get all the matches for a regular expression in a string.",
  "devDependencies": {
    "tester": "^1.3.0"
  },
  "directories": {
    "example": "example",
    "test": "test"
  },
  "files": [
    "app/",
    "bin/",
    "bloggify.js",
    "bloggify.json",
    "bloggify/",
    "cli.js",
    "dist/",
    "index.js",
    "lib/",
    "menu/",
    "resources/",
    "scripts/",
    "src/"
  ],
  "homepage": "https://github.com/IonicaBizau/match-all#readme",
  "keywords": [
    "matches",
    "regex",
    "string"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "name": "match-all",
  "optionalDependencies": {},
  "readme": "<!-- Please do not edit this file. Edit the `blah` field in the `package.json` instead. If in doubt, open an issue. -->\n\n# match-all\n\n [![Support me on Patreon][badge_patreon]][patreon] [![Buy me a book][badge_amazon]][amazon] [![PayPal][badge_paypal_donate]][paypal-donations] [![Version](https://img.shields.io/npm/v/match-all.svg)](https://www.npmjs.com/package/match-all) [![Downloads](https://img.shields.io/npm/dt/match-all.svg)](https://www.npmjs.com/package/match-all)\n\n> Get all the matches for a regular expression in a string.\n\n## :cloud: Installation\n\n```sh\n$ npm i --save match-all\n```\n\n\n## :clipboard: Example\n\n\n\n```js\nconst matchAll = require(\"match-all\");\n\nlet s = \"Hello _World_ and _Mars_\";\nconsole.log(matchAll(s, /_([a-z]+)_/gi).toArray());\n// => [ \"World\", \"Mars\" ]\n\n// Get matches one by one\nlet m = matchAll(s, /_([a-z]+)_/gi);\nconsole.log(m.next());\n// => \"World\"\n\nconsole.log(m.next());\n// => \"Mars\"\n\nconsole.log(m.next());\n// => null\n\nlet multipleGroup = \"Hello _World001_ and _World002_\";\nconsole.log(matchAll(multipleGroup, /_([a-z]+([0-9]+))_/gi).toArray());\n// => [ \"World\", \"Mars\" ]\n\n// Get matches one by one\nlet multipleMatch = matchAll(multipleGroup, /_([a-z]+([0-9]+))_/gi);\nconsole.log(multipleMatch.nextRaw());\n// => [..., \"World001\", \"001\"]\n\nconsole.log(multipleMatch.nextRaw());\n// => [..., \"World002\", \"002\"]\n\nlet m2 = matchAll(\"Hello _World_, _Mars_, _Pluto_ and _Moon_!\", /_([a-z]+)_/gi);\nconsole.log(m2.next());\n// => \"World\"\n\n// Reset the match index\nm2.reset();\n\nconsole.log(m2.next());\n// => \"World\"\n\nconsole.log(m2.next());\n// => \"Mars\"\n\n// Set the match index to 20\nm2.reset(20);\n\nconsole.log(m2.next());\n// => \"Pluto\"\n```\n\n\n\n## :question: Get Help\n\nThere are few ways to get help:\n\n 1. Please [post questions on Stack Overflow](https://stackoverflow.com/questions/ask). You can open issues with questions, as long you add a link to your Stack Overflow question.\n 2. For bug reports and feature requests, open issues. :bug:\n 3. For direct and quick help, you can [use Codementor](https://www.codementor.io/johnnyb). :rocket:\n\n\n## :memo: Documentation\n\n\n### `matchAll(s, r)`\nGet all the matches for a regular expression in a string.\n\n#### Params\n\n- **String** `s`: The input string.\n- **RegExp** `r`: The regular expression.\n\n#### Return\n- **Object** An object containing the following fields:\n - `input` (String): The input string.\n - `regex` (RegExp): The regular expression.\n - `next` (Function): Get the next match.\n - `toArray` (Function): Get all the matches.\n - `reset` (Function): Reset the index.\n\n### `next()`\nGet the next match in single group match.\n\n#### Return\n- **String** The matched snippet.\n\n### `nextRaw()`\nGet the next match in raw regex output. Usefull to get another group match.\n\n#### Return\n- **Array** The matched snippet\n\n### `toArray()`\nGet all the matches.\n\n#### Return\n- **Array** The matched snippets.\n\n### `reset(i)`\nReset the index.\n\n#### Params\n\n- **Number** `i`: The new index (default: `0`).\n\n#### Return\n- **Number** The new index.\n\n\n\n## :yum: How to contribute\nHave an idea? Found a bug? See [how to contribute][contributing].\n\n\n## :sparkling_heart: Support my projects\n\nI open-source almost everything I can, and I try to reply everyone needing help using these projects. Obviously,\nthis takes time. You can integrate and use these projects in your applications *for free*! You can even change the source code and redistribute (even resell it).\n\nHowever, if you get some profit from this or just want to encourage me to continue creating stuff, there are few ways you can do it:\n\n - Starring and sharing the projects you like :rocket:\n - [![PayPal][badge_paypal]][paypal-donations]—You can make one-time donations via PayPal. I'll probably buy a ~~coffee~~ tea. :tea:\n - [![Support me on Patreon][badge_patreon]][patreon]—Set up a recurring monthly donation and you will get interesting news about what I'm doing (things that I don't share with everyone).\n - **Bitcoin**—You can send me bitcoins at this address (or scanning the code below): `1P9BRsmazNQcuyTxEqveUsnf5CERdq35V6`\n\n    ![](https://i.imgur.com/z6OQI95.png)\n\nThanks! :heart:\n\n\n## :dizzy: Where is this library used?\nIf you are using this library in one of your projects, add it in this list. :sparkles:\n\n\n - [`bot-peripheral`](https://github.com/JubiAi/bot-peripheral#readme) (by Jubi Ai)—Bot Peripheral\n - [`emojer`](https://github.com/IonicaBizau/emojer#readme)—Emojify all the things.\n - [`rucksack`](https://github.com/Bloggify/rucksack#readme) (by Bloggify)—JavaScript and CSS bundler.\n - [`sheepskin`](http://github.com/nate-wilkins/sheepskin) (by Nate-Wilkins)—A light weight command line interface tester.\n - [`text-testing-mocha`](https://github.com/azu/text-testing-mocha) (by azu)—text-testing for Mocha\n - [`trello-react-scripts`](https://npmjs.com/package/trello-react-scripts)—Create React App template for Trello Power Ups\n\n## :scroll: License\n\n[MIT][license] © [Ionică Bizău][website]\n\n[badge_patreon]: http://ionicabizau.github.io/badges/patreon.svg\n[badge_amazon]: http://ionicabizau.github.io/badges/amazon.svg\n[badge_paypal]: http://ionicabizau.github.io/badges/paypal.svg\n[badge_paypal_donate]: http://ionicabizau.github.io/badges/paypal_donate.svg\n[patreon]: https://www.patreon.com/ionicabizau\n[amazon]: http://amzn.eu/hRo9sIZ\n[paypal-donations]: https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=RVXDDLKKLQRJW\n[donate-now]: http://i.imgur.com/6cMbHOC.png\n\n[license]: http://showalicense.com/?fullname=Ionic%C4%83%20Biz%C4%83u%20%3Cbizauionica%40gmail.com%3E%20(https%3A%2F%2Fionicabizau.net)&year=2015#license-mit\n[website]: https://ionicabizau.net\n[contributing]: /CONTRIBUTING.md\n[docs]: /DOCUMENTATION.md\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/IonicaBizau/match-all.git"
  },
  "scripts": {
    "test": "node test"
  },
  "version": "1.2.4"
}
